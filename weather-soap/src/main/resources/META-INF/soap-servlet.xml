<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd">

    <sws:annotation-driven/>
	<sws:dynamic-wsdl id="weather"       
	    portTypeName="WeatherPort"
	    locationUri="/ws/"
	    targetNamespace="http://weather.homework.tieto.com/schemas">
	   <sws:xsd location="classpath:/weatherRequest.xsd"/>     
	   <sws:xsd location="classpath:/weatherResponse.xsd"/>
	</sws:dynamic-wsdl>

	<sws:interceptors>
 		<bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor" /> 
		<bean id="validatingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
		    <property name="schema" value="classpath:/weatherRequest.xsd"/>
		    <property name="validateRequest" value="true"/>
		    <property name="validateResponse" value="false"/>
		</bean>
	</sws:interceptors>
	
	<bean id="exceptionResolver"
        class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
        <property name="defaultFault" value="SERVER"/>
        <property name="exceptionMappings">            
        	<props>
        		<prop key="com.tieto.homework.weather.exception.ClientException" >CLIENT</prop>
        	</props>
        </property>
    </bean>
			
	<import resource="classpath:/META-INF/common-config.xml"/>
	<import resource="classpath:/META-INF/job-config.xml"/>	
</beans>